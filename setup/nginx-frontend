upstream frontend_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response

  # for UNIX domain socket setups
  server unix:/tmp/iop_frontend.sock fail_timeout=0;

  # for a TCP configuration
  # server 127.0.0.1:2903 fail_timeout=0;
}

server {
  listen 80;
  client_max_body_size 4G;

  keepalive_timeout 5;

  root /home/pi/IoP/frontend/IoP/static;
  location / {
    try_files $uri @proxy_to_app;
  }
  location @proxy_to_app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # enable this if and only if you use HTTPS
    # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://frontend_server;
  }

  # error_page 500 502 503 504 /500.html;
  # location = /500.html {
  #  root /path/to/app/current/public;
  # }
}
