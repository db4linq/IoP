// Generated by CoffeeScript 1.10.0
(function() {
  var getCurrentPUUID, getCurrentPlant, getCurrentSensor, initLineGraph, initSetTab, sg_nsps, sg_nsps_reset, sg_nsps_submit, sg_rsps, sg_rsps_change, sg_rsps_create, sg_rsps_reset, sg_rsps_submit, sg_ssps, sg_ssps_reset, sg_ssps_submit;

  getCurrentPlant = function() {
    var request;
    request = $.ajax({
      url: '/get/current/plant',
      method: 'POST',
      async: false,
      data: {}
    });
    request.done(function(msg) {});
    request.fail(function(jqXHR, textStatus) {
      $('section.mainContent').html('Request failed:' + textStatus);
    });
    return request.responseText;
  };

  getCurrentPUUID = function() {
    var request;
    request = $.ajax({
      url: '/get/current/p_uuid',
      method: 'POST',
      async: false,
      data: {}
    });
    request.done(function(msg) {});
    request.fail(function(jqXHR, textStatus) {
      $('section.mainContent').html('Request failed:' + textStatus);
    });
    return request.responseText;
  };

  getCurrentSensor = function() {
    var request;
    request = $.ajax({
      url: '/get/current/sensor',
      method: 'POST',
      async: false,
      data: {}
    });
    request.done(function(msg) {});
    request.fail(function(jqXHR, textStatus) {
      $('section.mainContent').html('Request failed:' + textStatus);
    });
    return request.responseText;
  };

  initLineGraph = function(graphName) {
    var current, current_data, plant, sensor, sensordata;
    sensor = getCurrentSensor();
    plant = getCurrentPUUID();
    current = localStorage.getItem(sensor + ',' + plant);
    if (current === null || current === '') {
      console.log('building localStorage');
      sensordata = $.ajax({
        url: '/get/plant/sensor/dataset',
        method: 'POST',
        data: {}
      });
      sensordata.done(function(sensordatamsg) {
        var data, g, i, j, len, len1, ref, ref1, sensordataset;
        sensordataset = [];
        ref = JSON.parse(sensordatamsg)['real'];
        for (i = 0, len = ref.length; i < len; i++) {
          data = ref[i];
          sensordataset.push([new Date(data['timestamp'] * 1000), data['value'], null]);
        }
        ref1 = JSON.parse(sensordatamsg)['predicted'];
        for (j = 0, len1 = ref1.length; j < len1; j++) {
          data = ref1[j];
          sensordataset.push([new Date(data['timestamp'] * 1000), null, data['value']]);
        }
        localStorage.setItem(sensor + ',' + plant, sensordatamsg);
        smoothPlotter.smoothing = 0.33;
        g = new Dygraph(document.getElementById("graph"), sensordataset, {
          labels: ['time', graphName, 'prediction'],
          plotter: smoothPlotter,
          legend: 'always',
          animatedZooms: true
        });
      });
      return;
    } else {
      console.log('using localStorage');
      current_data = JSON.parse(current);
      sensordata = $.ajax({
        url: '/get/plant/sensor/dataset/custom',
        method: 'POST',
        data: {
          'latest_timestamp': current_data['real'][current_data['real'].length - 1]['timestamp']
        }
      });
      sensordata.done(function(sensordatamsg) {
        var data, g, i, j, k, len, len1, len2, ref, ref1, ref2, sensordataset;
        sensordataset = [];
        ref = JSON.parse(sensordatamsg)['real'];
        for (i = 0, len = ref.length; i < len; i++) {
          data = ref[i];
          current_data.push(data);
        }
        current_data['predicted'] = JSON.parse(sensordatamsg)['predicted'];
        localStorage.setItem(sensor + ',' + plant, JSON.stringify(current_data));
        ref1 = current_data['real'];
        for (j = 0, len1 = ref1.length; j < len1; j++) {
          data = ref1[j];
          sensordataset.push([new Date(data['timestamp'] * 1000), data['value'], null]);
        }
        ref2 = current_data['predicted'];
        for (k = 0, len2 = ref2.length; k < len2; k++) {
          data = ref2[k];
          sensordataset.push([new Date(data['timestamp'] * 1000), null, data['value']]);
        }
        smoothPlotter.smoothing = 0.33;
        return g = new Dygraph(document.getElementById("graph"), sensordataset, {
          labels: ['time', graphName, 'prediction'],
          plotter: smoothPlotter,
          legend: 'always',
          animatedZooms: true
        });
      });
      return;
    }
  };

  window.initLineGraph = initLineGraph;

  initSetTab = function(tabName) {
    $('div.menu.mainMenu').children('.' + tabName).addClass('active');
  };

  window.initSetTab = initSetTab;

  sg_nsps = function() {
    var request;
    request = $.ajax({
      url: '/get/plant/settings/data/non_specific',
      method: 'POST',
      data: {}
    });
    request.done(function(msg) {
      msg = JSON.parse(msg);
      $('#__nsps_name input').val(msg['name']);
      $('#__nsps_type input').val(msg['type']);
      $('#__nsps_location input').val(msg['location']);
      $('#__nsps_segment').fadeIn('slow');
    });
  };

  window.sg_nsps = sg_nsps;

  sg_nsps_reset = function(that) {
    $(that).addClass('disabled');
    $(that).addClass('loading');
    sg_nsps();
    $(document).ajaxComplete(function() {
      $(that).removeClass('disabled');
      return $(that).removeClass('loading');
    });
  };

  window.sg_nsps_reset = sg_nsps_reset;

  sg_nsps_submit = function(that) {
    var request;
    $(that).addClass('disabled');
    $(that).addClass('loading');
    request = $.ajax({
      url: '/update/plant/settings/non_specific',
      method: 'POST',
      data: {
        'name': $('#__nsps_name input').val(),
        'location': $('#__nsps_location input').val(),
        'type': $('#__nsps_type input').val()
      }
    });
    return request.done(function(msg) {
      msg = JSON.parse(msg);
      $(that).removeClass('disabled');
      $(that).removeClass('loading');
      if (msg['info'] === 'change') {
        return window.location = '/plant/' + msg['plant'] + '/overview';
      }
    });
  };

  window.sg_nsps_submit = sg_nsps_submit;

  sg_ssps = function() {
    var request;
    request = $.ajax({
      url: '/get/plant/settings/data/sensor_ranges',
      method: 'POST',
      data: {}
    });
    request.done(function(msg) {
      var i, item, len, range_request, settings;
      msg = JSON.parse(msg);
      for (i = 0, len = msg.length; i < len; i++) {
        item = msg[i];
        settings = item['settings'];
        range_request = $.ajax({
          url: '/get/sensor/range',
          method: 'POST',
          data: {
            'sensor': item['sensor']
          },
          async: false
        });
        range_request.done(function(range) {
          var current_settings, data, sensor;
          data = JSON.parse(range);
          range = data['range'];
          sensor = data['sensor'];
          current_settings = [];
          current_settings.push(settings['yellow']['min']);
          current_settings.push(settings['green']['min']);
          current_settings.push(settings['green']['max']);
          current_settings.push(settings['yellow']['max']);
          return $("#flat-slider-vertical-" + sensor).slider({
            max: range['max'],
            min: range['min'],
            values: current_settings,
            orientation: "vertical"
          }).slider("pips", {
            first: "pip",
            last: "pip"
          }).slider("float");
        });
      }
      $('.__ssps_segment').fadeIn('slow');
    });
  };

  window.sg_ssps = sg_ssps;

  sg_ssps_submit = function(that) {
    var name, request, values;
    $(that).addClass('disabled');
    $(that).addClass('loading');
    name = $(that).parent().parent().parent().attr('class').split(' ')['2'].split('_')[1];
    values = $("#flat-slider-vertical-" + name).slider("values");
    values = values.sort(function(a, b) {
      return a - b;
    });
    $("#flat-slider-vertical-" + name).slider("values", values);
    request = $.ajax({
      url: '/update/plant/ranges',
      method: 'POST',
      data: {
        'new': values,
        'sensor': name
      }
    });
    request.done(function(msg) {
      $(that).removeClass('disabled');
      return $(that).removeClass('loading');
    });
  };

  window.sg_ssps_submit = sg_ssps_submit;

  sg_ssps_reset = function(that) {
    var name, request;
    $(that).addClass('disabled');
    $(that).addClass('loading');
    name = $(that).parent().parent().parent().attr('class').split(' ')['2'].split('_')[1];
    request = $.ajax({
      url: '/get/plant/sensor/ranges',
      method: 'POST',
      data: {
        'sensor': name
      }
    });
    request.done(function(msg) {
      var values;
      msg = JSON.parse(msg);
      values = [];
      values.push(msg['yellow']['min']);
      values.push(msg['green']['min']);
      values.push(msg['green']['max']);
      values.push(msg['yellow']['max']);
      $("#flat-slider-vertical-" + name).slider("values", values);
      $(that).removeClass('disabled');
      $(that).removeClass('loading');
    });
  };

  window.sg_ssps_reset = sg_ssps_reset;

  sg_rsps = function() {
    var request;
    request = $.ajax({
      url: '/get/responsibles',
      method: 'POST',
      data: {}
    });
    request.done(function(msg) {
      var current, i, len, person;
      msg = JSON.parse(msg);
      for (i = 0, len = msg.length; i < len; i++) {
        person = msg[i];
        $('#select').append('<option value="' + person['email'] + '">' + person['name'] + '</option>');
      }
      current = $.ajax({
        url: '/get/plant/responsible',
        method: 'POST',
        data: {}
      });
      return current.done(function(msg) {
        msg = JSON.parse(msg);
        $('#select').dropdown('set selected', msg['email']);
        $('#__rsps_input').val(msg['email']);
        $('#__rsps_segment').fadeIn('slow');
      });
    });
  };

  window.sg_rsps = sg_rsps;

  sg_rsps_change = function(that) {
    $('#__rsps_input').val($(that).val());
  };

  window.sg_rsps_change = sg_rsps_change;

  sg_rsps_submit = function(that) {
    var email, name, request;
    $(that).addClass('disabled');
    $(that).addClass('loading');
    name = $("#select option:selected").text();
    email = $('#__rsps_input').val();
    request = $.ajax({
      url: '/update/plant/responsible',
      method: 'POST',
      data: {
        'name': name,
        'email': email
      }
    });
    request.done(function(msg) {
      $(that).removeClass('disabled');
      $(that).removeClass('loading');
    });
  };

  window.sg_rsps_submit = sg_rsps_submit;

  sg_rsps_create = function(that) {
    var email, name, request, wizard;
    $(that).addClass('disabled');
    $(that).addClass('loading');
    wizard = $("#create_select option:selected").text();
    console.log(wizard);
    name = $('#__rspsc_name').val();
    email = $('#__rspsc_email').val();
    request = $.ajax({
      url: '/create/responsible',
      method: 'POST',
      data: {
        'name': name,
        'email': email,
        'wizard': wizard
      }
    });
    request.done(function(msg) {
      $(that).removeClass('disabled');
      $(that).removeClass('loading');
    });
  };

  window.sg_rsps_create = sg_rsps_create;

  sg_rsps_reset = function(that) {
    var current;
    $(that).addClass('disabled');
    $(that).addClass('loading');
    current = $.ajax({
      url: '/get/plant/responsible',
      method: 'POST',
      data: {}
    });
    return current.done(function(msg) {
      msg = JSON.parse(msg);
      $('#select').dropdown('set selected', msg['email']);
      $('#__rsps_input').val(msg['email']);
      $(that).removeClass('disabled');
      $(that).removeClass('loading');
    });
  };

  window.sg_rsps_reset = sg_rsps_reset;

  $(function() {
    $('div.menu.mainMenu a').click(function(e) {
      $(this).parent().children('.active').removeClass('active');
      $(this).addClass('active');
    });
    $('a.item.global_settings').click(function(e) {
      var request;
      request = $.ajax({
        url: '/get/general/settings',
        method: 'POST',
        data: {}
      });
      request.done(function(msg) {
        $('section.mainContent').html(msg);
        window.history.pushState({}, '', '/global/settings');
        $('div.menu.mainMenu a').parent().children('.active').removeClass('active');
        $('div.pusher div.ui.segment div.information h1.ui.header.plant_header').html(_.capitalize('Global Settings'));
        $('div.iopheader div.ui.menu.secondary').css('display', 'none');
      });
      request.fail(function(jqXHR, textStatus) {
        $('section.mainContent').html('Request failed:' + textStatus);
      });
      window.history.pushState({}, '', '/global/settings');
    });
    $('a.item.plant_settings').click(function(e) {
      var request;
      request = $.ajax({
        url: '/get/plant/settings',
        method: 'POST',
        data: {}
      });
      request.done(function(msg) {
        $('section.mainContent').html(msg);
        $('div.menu.mainMenu a').parent().children('.active').removeClass('active');
      });
      request.fail(function(jqXHR, textStatus) {
        $('section.mainContent').html('Request failed:' + textStatus);
      });
      window.history.pushState({}, '', '/plant/' + getCurrentPlant() + '/settings');
    });
    $('a.item.plant').click(function(e) {
      var plant, request;
      plant = $(this).attr('class').split(' ')[2];
      request = $.ajax({
        url: '/get/plant/overview',
        method: 'POST',
        data: {
          plant: plant
        }
      });
      request.done(function(msg) {
        $('section.mainContent').fadeOut('slow', function() {
          $('section.mainContent').html(msg).fadeIn('slow');
        });
        window.history.pushState({}, '', '/plant/' + plant + '/overview');
        $('div.menu.mainMenu a').parent().children('.active').removeClass('active');
        $('div.menu.mainMenu a.overview').addClass('active');
        $('div.pusher div.ui.segment div.information h1.ui.header.plant_header').html(_.capitalize(plant));
        $('div.iopheader div.ui.menu.secondary').css('display', 'inherit');
      });
      request.fail(function(jqXHR, textStatus) {
        $('section.mainContent').html('Request failed:' + textStatus);
      });
    });
    $('a.item.sensor').click(function(e) {
      var request, sensor;
      sensor = $(this).attr('class').split(' ')[2];
      request = $.ajax({
        url: '/get/plant/sensor',
        method: 'POST',
        data: {
          sensor: sensor
        }
      });
      request.done(function(msg) {
        $('section.mainContent').html(msg);
      });
      request.fail(function(jqXHR, textStatus) {
        $('section.mainContent').html('Request failed:' + textStatus);
      });
      window.history.pushState({}, '', '/plant/' + getCurrentPlant() + '/' + sensor);
    });
    $('a.item.overview').click(function(e) {
      var request;
      request = $.ajax({
        url: '/get/plant/overview',
        method: 'POST',
        data: {}
      });
      request.done(function(msg) {
        $('section.mainContent').html(msg);
        window.history.pushState({}, '', '/plant/' + getCurrentPlant() + '/overview');
      });
      request.fail(function(jqXHR, textStatus) {
        $('section.mainContent').html('Request failed:' + textStatus);
      });
    });
  });

}).call(this);
