 mesh network:
   test:
     ✔ alive: register needed @done (16-09-14 21:26)
     ✔ register @done (16-09-13 20:42)
     ✔ discover @done (16-09-05 20:14)
     ✔ discover with database integration @done (16-09-13 20:42)
     ✔ notify_ip @done (16-09-13 20:43)
     [ ] dedicated alive
     [ ] dedicated register
     ✔ rest api change of underlying db in virtualbox -> does it work at all or do I need to restart the process? @done (16-09-18 13:38)
     [ ] moisture
     [ ] light
     [ ] temperature + humidity
     [ ] extensions
       [ ] moisture bar
       [ ] trafficlight
       [ ] display
       [ ] water_pump
     ✔ multithreaded process deamon @done (16-09-15 20:31)
   build register:
     ✔ add MeshObject @done (16-09-06 19:20)
     ✔ discovered into database @done (16-09-06 19:21)

       ✔ discover @existing @done (16-09-06 19:31)
       ✔ delay 5 sec @existing @done (16-09-06 19:31)
       ✔ reply not registered @new @done (16-09-06 19:31)
       ✔ fetch all discovered @done (16-09-06 19:31)
     ✔ ask publickey @existing @done (16-09-06 19:31)
     ✔ send publickey @new @done (16-09-08 20:40)
       ✔ generate AES(or something else) key @done (16-09-10 15:58)
     ✔ send encrypted key @existing @done (16-09-10 15:58)
     ✔ save and say ok! @new @done (16-09-10 16:10)
       ✔ create database backup [named hash] @existing @done (16-09-10 18:03)
       ✔ open HTTP server @existing @done (16-09-10 18:03)
     ✔ send HTTP established [encrypted] [A_MESSAGE port, B_MESSAGE hash, C_MESSAGE new_plantUUID] @existing @done (16-09-12 15:39)
       ✔ download file, rename @new @done (16-09-12 16:13)
       ✔ change local plant @new @done (16-09-13 14:54)
       ✔ start sensor_data daemon @new @done (16-09-17 17:05)
         ✔ -> check if available @done (16-09-17 17:05)
     ✔ send finished @existing @done (16-09-13 15:06)
       ✔ wget until 404 own adress index (max 4) - kill http_server @done (16-09-13 15:06)
       ✔ test with alive, rest @existing @done (16-09-13 15:06)
     ✔ send working @existing @done (16-09-13 15:06)
       ✘ rest api to others [insert] @new @cancelled (16-09-13 18:28)
         ✘ frontend! @cancelled (16-09-13 18:28)
     ✔ send done @new @done (16-09-13 15:11)
     ✔ send done @existing @done (16-09-13 15:11)
     ✔ registered change on @new @done (16-09-14 21:27)
    build notify:
      ip:
        ✔ detect if changes @done (16-09-13 20:43)
        ✔ reply with [3] == NOT_CHANGED, CHANGED @done (16-09-13 20:43)
      new_data:
        [ ] trigger after insert data
        --> do this to all! except localhost
          [ ] send new trigger @origin
            [ ] new trigger -> notify new_data
          [ ] fetch data @target
            [ ] get from plant!

    build register and alive:
      ✔ database integration @done (16-09-14 21:27)
        ✔ different port and listen 120 (alive) or 320 (register) -> check if fail or not! Is better with that @done (16-09-14 21:27)
    dedicated register:
      [ ] last insert to all other plants


frontend:
  add plant:
    ✔ layout @done (16-09-19 20:41)
    [ ] logic
    [ ] rest api to others
  sensordata:
    [ ] switch to indexedDB


 rest:
   all:
     ✔ no database mode @done (16-09-17 14:40)
       ✔ -> detect change of database? @done (16-09-17 14:40)
     ✔ changes automatically detected! @done (16-09-17 16:29)


 sensor_scripts (SS xD):
   daemon:
     ✔ check no database @done (16-09-17 14:00)
     ✔ check already running @done (16-09-17 14:00)
       ✔ if both is True start loop -> else not @done (16-09-17 14:00)
   core:
    ✔ port moisture @done (16-09-16 15:35)
    ✔ port light @done (16-09-16 15:35)
   extensions:
    ✔ LED to python 3 @done (16-09-18 13:37)
      ✔ TrafficLight @done (16-09-17 17:34)
      ✔ MoistureBar @done (16-09-18 13:37)
   driver:
    [ ] to python 3
