 mesh network:
   test:
     ✔ alive: register needed @done (16-09-14 21:26)
     ✔ register @done (16-09-13 20:42)
     ✔ discover @done (16-09-05 20:14)
     ✔ discover with database integration @done (16-09-13 20:42)
     ✔ notify_ip @done (16-09-13 20:43)
     ✔ add_plant @done (16-09-21 18:18)]
     [ ] simulated plant
     [ ] completed add_plant
     [ ] dedicated alive
     [ ] rest_api create/plant
     [ ] rest_api create/plant/register
     ✔ dedicated deliver new_data @done (16-09-26 18:55)
     ✔ deliver new_data @done (16-09-27 15:09)
     ✔ dedicated register @done (16-09-21 18:18)
     [ ] dedicated reboot
     ✔ rest api change of underlying db in virtualbox -> does it work at all or do I need to restart the process? @done (16-09-18 13:38)
     [ ] moisture
     [ ] light
     [ ] temperature + humidity
     [ ] extensions
       [ ] moisture bar
       [ ] trafficlight
       [ ] display
       [ ] water_pump
     ✔ multithreaded process deamon @done (16-09-15 20:31)
   build register:
     ✔ add MeshObject @done (16-09-06 19:20)
     ✔ discovered into database @done (16-09-06 19:21)

       ✔ discover @existing @done (16-09-06 19:31)
       ✔ delay 5 sec @existing @done (16-09-06 19:31)
       ✔ reply not registered @new @done (16-09-06 19:31)
       ✔ fetch all discovered @done (16-09-06 19:31)
     ✔ ask publickey @existing @done (16-09-06 19:31)
     ✔ send publickey @new @done (16-09-08 20:40)
       ✔ generate AES(or something else) key @done (16-09-10 15:58)
     ✔ send encrypted key @existing @done (16-09-10 15:58)
     ✔ save and say ok! @new @done (16-09-10 16:10)
       ✔ create database backup [named hash] @existing @done (16-09-10 18:03)
       ✔ open HTTP server @existing @done (16-09-10 18:03)
     ✔ send HTTP established [encrypted] [A_MESSAGE port, B_MESSAGE hash, C_MESSAGE new_plantUUID] @existing @done (16-09-12 15:39)
       ✔ download file, rename @new @done (16-09-12 16:13)
       ✔ change local plant @new @done (16-09-13 14:54)
       ✔ start sensor_data daemon @new @done (16-09-17 17:05)
         ✔ -> check if available @done (16-09-17 17:05)
     ✔ send finished @existing @done (16-09-13 15:06)
       ✔ wget until 404 own adress index (max 4) - kill http_server @done (16-09-13 15:06)
       ✔ test with alive, rest @existing @done (16-09-13 15:06)
     ✔ send working @existing @done (16-09-13 15:06)
       ✘ rest api to others [insert] @new @cancelled (16-09-13 18:28)
         ✘ frontend! @cancelled (16-09-13 18:28)
     ✔ send done @new @done (16-09-13 15:11)
     ✔ send done @existing @done (16-09-13 15:11)
     ✔ registered change on @new @done (16-09-14 21:27)
    build notify:
      ip:
        ✔ detect if changes @done (16-09-13 20:43)
        ✔ reply with [3] == NOT_CHANGED, CHANGED @done (16-09-13 20:43)
      new_data:
        ✔ trigger after insert data @done (16-09-26 15:58)
          ✔ --> do this to all! except localhost @done (16-09-26 15:58)
          ✔ dedicated mode @done (16-09-26 15:58)
          ✔ send new trigger @origin @done (16-09-25 20:12)
            ✔ new trigger -> notify new_data @done (16-09-25 20:12)
          ✔ fetch data @target @done (16-09-25 20:12)
            ✔ get from plant! @done (16-09-25 20:12)

    build register and alive:
      ✔ database integration @done (16-09-14 21:27)
        ✔ different port and listen 120 (alive) or 320 (register) -> check if fail or not! Is better with that @done (16-09-14 21:27)
    dedicated register:
      [ ] last insert to all other plants
      ✘ only inserts holger @cancelled (16-09-21 16:07)
      ✔ status @done (16-09-21 18:18)
      ✔ check if plant with ip already exists @done (16-09-21 18:18)

frontend:
  ✔ fix general links @done (16-09-21 20:15)
  ✔ add add_plant @done (16-09-21 21:33)
  ✔ add add_plant redirect @done (16-09-21 21:33)
  [ ] add overview
  [ ] add smiles
  [ ] consider log view!
  add plant:
    [ ] add persistant duration
    [ ] link from main page and redirect if done
    ✔ layout @done (16-09-19 20:41)
    ✔ logic @done (16-09-20 20:42)
    [ ] rest api to others
    ✘ only inserts holger @cancelled (16-09-21 16:07)
  sensordata:
    ✔ pie bug @done (16-09-21 21:36)
    ✔ switch to indexedDB @done (16-09-24 14:29)
      ✔ write to indexedDB @done (16-09-23 23:02)
      ✔ read from indexedDB @done (16-09-24 14:24)
    ✔ add partial sensordata fetch -> 100 assets @done (16-09-27 18:37)
      ✔ could also be x^n or something like this, so it's like 10...25...100...1000...10000 @done (16-09-27 18:37)
      ✘ progress bar @cancelled (16-09-27 18:37)
    ✔ add sensordata if new data = [] - not access predicted @done (16-09-24 14:29)
  plant settings:
    ✔ message presets @done (16-10-31 17:18)
  general settings:
    [ ] integrate
      [ ] message presets
      [ ] people management
      [ ] day/night cycle
        [ ] integrate also in tools


 rest:
   discover:
     [ ] discover
     [ ] get discover
   all:
     ✔ no database mode @done (16-09-17 14:40)
       ✔ -> detect change of database? @done (16-09-17 14:40)
     ✔ changes automatically detected! @done (16-09-17 16:29)
   get:
     ✔ time also from datetime @done (16-09-26 18:56)
     ✔ add partial sensordata fetch -> 100 assets @done (16-09-27 18:38)
   create:
     [ ] plant
       [ ] create all related tables entries -> mirror from localhost
         [ ] SensorStatus
         [ ] SensorCount
         [ ] SensorSatisfactionValue

 sensor_scripts:
   daemon:
     ✔ check no database @done (16-09-17 14:00)
     ✔ check already running @done (16-09-17 14:00)
       ✔ if both is True start loop -> else not @done (16-09-17 14:00)
   core:
    ✔ port moisture @done (16-09-16 15:35)
    ✔ port light @done (16-09-16 15:35)
   extensions:
     water_pump:
       [ ] rethink with actual pump!
    ✔ LED to python 3 @done (16-09-18 13:37)
      ✔ TrafficLight @done (16-09-17 17:34)
      ✔ MoistureBar @done (16-09-18 13:37)
   tools + models:
     ✔ add persistant duration! @done (16-10-09 18:38)
     [ ] add simulated plant!
       [ ] generated in simulated
       [ ] check if predicted < now
         [ ] delete in predicted and insert in sensor data
         [ ] if predicted.count() == 0
           [ ] generate new
   driver:
    [ ] to python 3
   tools:
     [ ] integrate sat_streak and max_persistant
     [ ] reintegrate SensorCount
